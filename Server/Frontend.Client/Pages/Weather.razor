@page "/weather"
@rendermode InteractiveWebAssembly
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

    <AuthorizeView>
        <Authorized>
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
                <MudText Typo="Typo.h3" GutterBottom="true">Weather Forecast</MudText>
                <MudText Typo="Typo.body1" Class="mb-4">
                    This component demonstrates fetching data from the authenticated API.
                </MudText>

                @if (forecasts == null)
                {
                    <MudProgressLinear Indeterminate="true" />
                    <MudText>Loading weather data...</MudText>
                }
                else if (!string.IsNullOrEmpty(errorMessage))
                {
                    <MudAlert Severity="Severity.Error">
                        @errorMessage
                    </MudAlert>
                }
                else
                {
                    <MudTable Items="@forecasts" Hover="true" Striped="true">
                        <HeaderContent>
                            <MudTh>Date</MudTh>
                            <MudTh>Temp. (C)</MudTh>
                            <MudTh>Temp. (F)</MudTh>
                            <MudTh>Summary</MudTh>
                        </HeaderContent>
                        <RowTemplate Context="forecast">
                            <MudTd DataLabel="Date">@forecast.Date.ToShortDateString()</MudTd>
                            <MudTd DataLabel="Temp. (C)">@forecast.TemperatureC</MudTd>
                            <MudTd DataLabel="Temp. (F)">@forecast.TemperatureF</MudTd>
                            <MudTd DataLabel="Summary">@forecast.Summary</MudTd>
                        </RowTemplate>
                    </MudTable>
                }
            </MudContainer>
        </Authorized>
        <NotAuthorized>
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-16">
                <MudAlert Severity="Severity.Warning">
                    You need to <MudLink Href="/login">login</MudLink> to view the weather data.
                </MudAlert>
            </MudContainer>
        </NotAuthorized>
    </AuthorizeView>



@code {
    private WeatherForecast[]? forecasts;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Call the authenticated API endpoint
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("api/weatherforecast");
        }
        catch (HttpRequestException ex) when (ex.Message.Contains("401"))
        {
            errorMessage = "Authentication required. Please login to access weather data.";
        }
        catch (HttpRequestException ex)
        {
            errorMessage = $"Failed to load weather data: {ex.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
