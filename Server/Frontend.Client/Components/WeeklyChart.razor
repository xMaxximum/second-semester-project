@using System.Net
@using ApexCharts
@using MudBlazor.Extensions
@using Shared.Models
@inject HttpClient Http

<ApexChart TItem="MyData"
           Options="chartOptions" Height="150">

    <ApexPointSeries TItem="MyData"
                     Items="Data"
                     Name="Distance"
                     SeriesType="SeriesType.Line"
                     XValue="e => e.Category"
                     YValue="e => e.Distance"
                     Color="#685ce4"
    />
</ApexChart>

<style>
    .apexcharts-tooltip-active{
        color: black;
    }
</style>

@code {
    private List<MyData> Data { get; set; } = new();

    private ApexChartOptions<MyData> chartOptions = new()
    {
        Chart = new Chart
        {
            Toolbar = new Toolbar
            {
                Show = false // Hides the download/export options
            },
        },
        Legend = new Legend
        {
            Show = false // Hides the legend
        },
        Tooltip = new Tooltip
        {
            Theme = Mode.Light
        },
        Xaxis = new XAxis
        {
            Labels = new XAxisLabels
            {
                Style = new AxisLabelStyle
                {
                    Colors = "var(--mud-palette-text-primary)"
                }
            }
        },
        Yaxis = new List<YAxis>
        {
            new YAxis
            {
                Labels = new YAxisLabels
                {
                    Style = new AxisLabelStyle
                    {
                        Colors = "var(--mud-palette-text-primary)"
                    }
                }
            }
        }
    };
    
    protected override async Task OnInitializedAsync()
    {
        await LoadWeeklyData();
    }
    
    private async Task LoadWeeklyData()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<ApiResponse<List<WeeklyDistanceResponse>>>(
                "/api/activities/weekly-distance");

            if (response?.IsSuccess == true && response.Data != null)
            {
                Data = response.Data.Select(item => new MyData()
                {
                    Category = item.Day,
                    Distance = (int)Math.Round(item.Distance)
                }).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading weekly distance data: {ex.Message}");
        }
        finally
        {
            StateHasChanged();
        }
    }

    public class MyData
    {
        public string Category { get; set; }
        public int Distance { get; set; }
    }

}
